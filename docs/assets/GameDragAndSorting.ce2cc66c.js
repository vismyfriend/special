import{S as f}from"./sortable.esm.65a421f9.js";import{u as S,p as _,o as l,f as d,h as i,t as o,F as m,q as g,n as u,z as b}from"./index.188ddab1.js";import{s as k}from"./sortingWordsData.0ee8ba95.js";import{u as p}from"./example-store.4c91f50e.js";import{_ as C}from"./plugin-vue_export-helper.21dcd24c.js";const v={name:"GameDragAndSorting",setup(){const t=S(),s=_(),n=p();return{route:t,router:s,gameStore:n}},data(){return{sortableInstances:[],currentGameData:{title:"",instructions:"",columns:[],items:[]},currentWords:[],columnAssignments:{},completedItems:new Set,columnRefs:{},startTime:null,mistakes:0,wordStatus:{},checkTimer:null,isDragging:!1,countedMistakes:new Set,hintsHidden:!1,temporaryHints:new Set}},computed:{availableWords(){return this.currentWords.filter(t=>!this.columnAssignments[t.id])}},mounted(){this.initializeGame()},methods:{initializeGame(){const t=this.route.params.missionName||"fruitsVegetables";this.currentGameData=k[t]||k.fruitsVegetables,this.currentWords=[...this.currentGameData.items],this.columnAssignments={},this.completedItems=new Set,this.columnRefs={},this.wordStatus={},this.startTime=Date.now(),this.mistakes=0,this.isDragging=!1,this.countedMistakes=new Set,this.hintsHidden=!0,this.temporaryHints=new Set,this.hintTimers={},this.checkTimer&&clearInterval(this.checkTimer),this.$nextTick(()=>{this.initializeSortable(),this.startPeriodicCheck()})},showHintTemporarily(t){this.hintsHidden&&(this.hintTimers[t]&&clearTimeout(this.hintTimers[t]),this.temporaryHints.add(t),this.hintTimers[t]=setTimeout(()=>{this.temporaryHints.delete(t),delete this.hintTimers[t]},5e3))},getHintClass(t){return this.hintsHidden&&!this.temporaryHints.has(t)?"blurred":""},initializeSortable(){this.sortableInstances.forEach(s=>s.destroy()),this.sortableInstances=[];const t={group:{name:"words",pull:!0,put:!0},animation:180,ghostClass:"sortable-ghost",chosenClass:"sortable-chosen",dragClass:"sortable-drag",forceFallback:!0,fallbackOnBody:!0,fallbackTolerance:5,fallbackOffset:{x:0,y:-8},delay:0,delayOnTouchOnly:!1,onStart:()=>{this.isDragging=!0},onEnd:()=>{this.isDragging=!1}};if(this.$refs.wordsContainer){const s=new f(this.$refs.wordsContainer,{...t,sort:!1,onAdd:n=>{const h=n.item.getAttribute("data-id");delete this.columnAssignments[h],this.wordStatus[h]=null,this.countedMistakes.delete(h)}});this.sortableInstances.push(s)}this.currentGameData.columns.forEach(s=>{const n=this.columnRefs[s.id];if(n){const h=new f(n,{...t,onAdd:c=>{const r=c.item.getAttribute("data-id");this.columnAssignments[r]=s.id}});this.sortableInstances.push(h)}})},toggleHints(){this.hintsHidden=!this.hintsHidden},startPeriodicCheck(){this.checkTimer=setInterval(()=>{this.isDragging||this.checkWordStatuses()},500)},checkWordStatuses(){this.currentWords.forEach(t=>{if(this.columnAssignments[t.id]){const n=this.columnAssignments[t.id]===t.correctColumn;(this.wordStatus[t.id]===null||n&&this.wordStatus[t.id]!=="correct"||!n&&this.wordStatus[t.id]!=="incorrect")&&(this.wordStatus[t.id]=n?"correct":"incorrect",!n&&!this.countedMistakes.has(t.id)&&(this.mistakes++,this.countedMistakes.add(t.id)),n&&this.countedMistakes.has(t.id)&&this.countedMistakes.delete(t.id))}else this.wordStatus[t.id]=null,this.countedMistakes.delete(t.id)})},getWordCardClass(t){const s=this.wordStatus[t];return s==="correct"?"word-correct":s==="incorrect"?"word-incorrect":""},getItemsInColumn(t){return this.currentWords.filter(s=>this.columnAssignments[s.id]===t)},checkAnswers(){this.checkTimer&&clearInterval(this.checkTimer);let t=0;this.currentWords.forEach(s=>{this.columnAssignments[s.id]===s.correctColumn?(this.completedItems.add(s.id),this.wordStatus[s.id]="correct"):this.columnAssignments[s.id]&&(t++,this.wordStatus[s.id]="incorrect")}),this.mistakes=t,this.finishGame()},finishGame(){const t=Date.now()-this.startTime;this.gameStore.setLastGameResults(t,this.mistakes),this.gameStore.setGameName("WordSorting"),this.gameStore.setWordSet(this.route.params.missionName),this.router.push({path:"/leader-board/",query:{missionName:this.route.params.missionName}})},resetGame(){this.initializeGame()}},beforeUnmount(){this.sortableInstances.forEach(t=>t.destroy()),this.checkTimer&&clearInterval(this.checkTimer)}},T={class:"drag-sort-game"},y={class:"game-header"},H={class:"instructions"},A={ref:"wordsContainer",class:"words-container"},w=["data-id","onClick"],D={class:"word-eng"},G={class:"columns-container"},W={class:"column-header"},I=["data-id","onClick"],M={class:"word-eng"},E={class:"game-controls"};function N(t,s,n,h,c,r){return l(),d("div",T,[i("div",y,[i("h2",null,o(c.currentGameData.title),1)]),i("div",H,[i("p",null,o(c.currentGameData.instructions),1)]),i("div",A,[(l(!0),d(m,null,g(r.availableWords,e=>(l(),d("div",{key:e.id,class:u(["word-card",r.getWordCardClass(e.id)]),"data-id":e.id,onClick:a=>r.showHintTemporarily(e.id)},[i("div",D,o(e.eng),1),i("div",{class:u(["word-ru",r.getHintClass(e.id)])},o(e.ru),3)],10,w))),128))],512),i("div",G,[(l(!0),d(m,null,g(c.currentGameData.columns,e=>(l(),d("div",{key:e.id,class:"column"},[i("div",W,[s[2]||(s[2]=i("span",{class:"column-icon"},"\u{1F4C1}",-1)),b(" "+o(e.title),1)]),i("div",{ref_for:!0,ref:a=>{c.columnRefs[e.id]=a},class:"column-content"},[(l(!0),d(m,null,g(r.getItemsInColumn(e.id),a=>(l(),d("div",{key:a.id,class:u(["word-card in-column",r.getWordCardClass(a.id)]),"data-id":a.id,onClick:x=>r.showHintTemporarily(a.id)},[i("div",M,o(a.eng),1),i("div",{class:u(["word-ru",r.getHintClass(a.id)])},o(a.ru),3)],10,I))),128))],512)]))),128))]),i("div",E,[i("button",{onClick:s[0]||(s[0]=(...e)=>r.toggleHints&&r.toggleHints(...e)),class:"control-button hints"},o(c.hintsHidden?"\u{1F441}\uFE0F \u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u043F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0438":"\u{1F648} \u0421\u043A\u0440\u044B\u0442\u044C \u043F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0438"),1),i("button",{onClick:s[1]||(s[1]=(...e)=>r.checkAnswers&&r.checkAnswers(...e)),class:"control-button check"}," \u2705 \u043F\u043E\u0434\u0435\u043B\u0438\u0442\u044C\u0441\u044F ")])])}var F=C(v,[["render",N],["__scopeId","data-v-473c4fb3"]]);export{F as default};
